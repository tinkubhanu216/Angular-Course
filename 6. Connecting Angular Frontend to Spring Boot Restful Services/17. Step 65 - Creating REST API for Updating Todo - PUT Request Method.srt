0
1
00:00:02,860 --> 00:00:09,130
Welcome back. In step, let's get started with creating the update service, so that when we click Save, we
1

2
00:00:09,130 --> 00:00:11,000
can call the update service.
2

3
00:00:11,200 --> 00:00:13,390
Let's go to eclipse.
3

4
00:00:13,390 --> 00:00:16,970
We need to start with the todo.service, to create the update.
4

5
00:00:17,170 --> 00:00:20,760
So what we'll do, is let's create a method down here.
5

6
00:00:20,850 --> 00:00:22,920
It is public todo.
6

7
00:00:23,200 --> 00:00:32,950
And I'll call this save todo,  And tdo. In JPA, same method is used to do the update and the inserts
7

8
00:00:32,960 --> 00:00:33,510
as well.
8

9
00:00:33,510 --> 00:00:40,600
So at a later point, we'll check the id of the todo. the id of the todo is -1.
9

10
00:00:40,670 --> 00:00:42,470
The idea of the todo is -1.
10

11
00:00:42,590 --> 00:00:44,840
Then it means we will want to insert it in.
11

12
00:00:44,840 --> 00:00:46,380
Let's not worry about it right now.
12

13
00:00:46,640 --> 00:00:54,190
What we want to do, is when we really have a todo with a different id, what we need to do? We
13

14
00:00:54,200 --> 00:00:56,370
would want to update it.
14

15
00:00:56,390 --> 00:00:57,910
This is just a static list.
15

16
00:00:57,950 --> 00:01:04,520
So to make it easy for us, if we would do the update is by calling delete ID, and passing the todo.
16

17
00:01:05,240 --> 00:01:15,460
getID(). So I'll delete the todo with that specific ID, and I will add the new todo in, and say todo.
17

18
00:01:15,540 --> 00:01:17,420
add().
18

19
00:01:17,670 --> 00:01:18,670
So what would happen?
19

20
00:01:18,930 --> 00:01:23,220
The old todo was deleted, and the new todo is added.
20

21
00:01:23,350 --> 00:01:30,270
So I'm kind of taking a shortcut in here, otherwise you would want to add the todo.
21

22
00:01:30,420 --> 00:01:34,830
So if it's a new todo with an ID -1, that means I would want todo add.
22

23
00:01:34,920 --> 00:01:37,040
But before that I would also set the id.
23

24
00:01:37,080 --> 00:01:47,550
So I set the ID. So what should be the ID? ++Id go to the ID and put it in.
24

25
00:01:47,880 --> 00:01:53,810
And in all the cases, what we'll do is we'll return the updated todo.
25

26
00:01:53,990 --> 00:01:56,610
So what we are doing here is creating a simple Save method.
26

27
00:01:56,610 --> 00:01:57,460
This helps us to
27

28
00:01:57,610 --> 00:02:00,230
add a new todo. When I'm adding a new todo,
28

29
00:02:00,230 --> 00:02:05,130
I'm just incrementing the counter and adding it in. When I have to update it.
29

30
00:02:05,190 --> 00:02:08,370
Then what I'm doing is first delete and then adding it.
30

31
00:02:08,470 --> 00:02:13,140
There's kind of a shortcut way, instead of taking each attribute and adding value.
31

32
00:02:13,140 --> 00:02:17,120
I'm just adding deleting it and updating it in.
32

33
00:02:17,420 --> 00:02:23,790
Now let's go to the resource and create both the methods. We'll create one method to do the add and one method
33

34
00:02:23,790 --> 00:02:25,530
to do the update.
34

35
00:02:25,560 --> 00:02:29,600
We already have the details for it through source.
35

36
00:02:29,600 --> 00:02:31,560
We decided this a little earlier.
36

37
00:02:31,790 --> 00:02:33,230
So let's go out and paste this in.
37

38
00:02:33,230 --> 00:02:40,050
So to add it we want to use a put, and to create a new rule we want to use a post, and that's the standard
38

39
00:02:40,050 --> 00:02:43,270
which is used when it comes to RESTful services.
39

40
00:02:43,530 --> 00:02:45,770
Let's start with the update method.
40

41
00:02:45,870 --> 00:02:55,450
So let's say @UpdateMapping, and what's the URL? is it todos update mapping.
41

42
00:02:55,460 --> 00:02:58,560
So I use this syntax as it is.
42

43
00:02:58,780 --> 00:03:02,370
So I'll just copy this stuff from here to here.
43

44
00:03:07,180 --> 00:03:09,890
Now I have the update mapping being present in here.
44

45
00:03:10,070 --> 00:03:16,890
They should be update todo. Instead of the  update mapping, actually I should have used put mapping.
45

46
00:03:16,890 --> 00:03:24,290
I'll update this mapping, control-1,  @PutMapping, we have the update todo body ready. We're
46

47
00:03:24,310 --> 00:03:32,290
not really doing anything yet, so really get a user name, id,  and variable username, ID that's cool.
47

48
00:03:32,410 --> 00:03:39,840
And along with the update to do we'll get a request body. In the request body,
48

49
00:03:39,880 --> 00:03:48,420
So we would have the updated content that is sent as part of the request body, and of the type todo.
49

50
00:03:48,550 --> 00:03:53,940
So let's add these in as well, in the body for the update request.
50

51
00:03:53,940 --> 00:04:01,150
We will typically send an OK status, with the content of the updated todo.
51

52
00:04:01,150 --> 00:04:05,530
So what I'll do, is I'll do a response entity of todo, it's not a  void.
52

53
00:04:05,540 --> 00:04:06,620
It's Todo.
53

54
00:04:06,970 --> 00:04:14,620
And now let's call the todo service.save(), and passing all the values off to that.
54

55
00:04:14,920 --> 00:04:18,300
And this would return the updated todos.
55

56
00:04:18,550 --> 00:04:27,220
Let's take the updated value of the todos,  to update it and let's return a new Response entity containing
56

57
00:04:27,300 --> 00:04:30,470
a todo. We populated the todo.
57

58
00:04:30,570 --> 00:04:39,600
And say Http Status.OK. Actually the same thing can be done by just saying return todo,
58

59
00:04:39,660 --> 00:04:42,220
and changing the return type to todo as well.
59

60
00:04:42,370 --> 00:04:43,160
But this was good.
60

61
00:04:43,170 --> 00:04:49,230
This gives us more options. In future if you want to extend this and be able to return other status back
61

62
00:04:49,320 --> 00:04:53,010
then using the response entity gives us more options.
62

63
00:04:53,010 --> 00:04:59,340
Now that we have created the mapping for this ,let's look at how to create the POST mapping in the next
63

64
00:04:59,340 --> 00:05:00,100
step. Until then,
64

65
00:05:00,190 --> 00:05:00,510
Bye Bye.
