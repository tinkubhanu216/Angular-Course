0
1
00:00:02,250 --> 00:00:07,550
Welcome back. In the previous step, we wanted to get the details of a specific todo.
1

2
00:00:07,560 --> 00:00:14,630
And we realized we don't really have a service to do that. So let's create a service quickly and let's
2

3
00:00:14,740 --> 00:00:16,890
copy this.
3

4
00:00:16,920 --> 00:00:23,420
So I would want to get the details of a specific todo. So and ID in and it's get mapping that's cool
4

5
00:00:23,430 --> 00:00:32,970
get ofg all todos ...get todo and I would want the variable ID in.
5

6
00:00:32,980 --> 00:00:40,730
So this is what we would want come up at the ID, and over here, what we want to do is todo service.
6

7
00:00:41,140 --> 00:00:45,670
find ID, and get me the specific one with that specific ID.
7

8
00:00:45,950 --> 00:00:52,350
And this would not return a list of todos, it would return a specific todo value back.  Done.
8

9
00:00:52,580 --> 00:00:54,810
Easy, cool.
9

10
00:00:54,820 --> 00:00:59,340
Now the server has picked up the change, and let us execute and see if we are able to execute the service. So
10

11
00:00:59,340 --> 00:01:01,400
/todos/
11

12
00:01:01,480 --> 00:01:07,670
1. cool! We were able very quickly implement the service to retrieve the details of a specific to do.
12

13
00:01:07,750 --> 00:01:10,230
Now I would want to call this service, what should we do?
13

14
00:01:10,310 --> 00:01:14,170
Let's go out to our todo service.
14

15
00:01:14,380 --> 00:01:17,850
So todo data service. ts, is where we would need to go.
15

16
00:01:17,950 --> 00:01:24,070
What we need to do, is we would want to do something very similar to delete. So actually copy this.
16

17
00:01:24,160 --> 00:01:33,980
And this is actually a retrieve todo. What we would want to do is instead of delete, you want to do a get and
17

18
00:01:33,980 --> 00:01:36,600
get the specific todo. well that looks good.
18

19
00:01:36,680 --> 00:01:40,020
So we have retrieve todo method ready to do that.
19

20
00:01:40,030 --> 00:01:43,540
So the service, we want to make use of it.
20

21
00:01:43,870 --> 00:01:48,060
We want to make use of it in the todo component.
21

22
00:01:48,150 --> 00:01:53,160
So when we are loading the todo,  we would want to get the details of todo. Let's igo down to todo component
22

23
00:01:53,460 --> 00:01:59,850
todo . component . ts. What we want to do in here, we would want to use the service and get
23

24
00:01:59,850 --> 00:02:00,600
the details.
24

25
00:02:00,810 --> 00:02:10,740
Before that we would need to autowire it in. Use Dependency Injection, private todo service, and this would
25

26
00:02:10,740 --> 00:02:14,100
be todo data service.
26

27
00:02:14,310 --> 00:02:23,330
What do you want to do: this.todo service. retrieve todo we continue the tradition of
27

28
00:02:23,650 --> 00:02:33,410
hard coding in28minutes and we will actually use the ID which comes from the service.
28

29
00:02:33,830 --> 00:02:38,160
So the id actually coming in as part of the path variable,  of our application.
29

30
00:02:38,180 --> 00:02:41,200
But we have not really saved it in, so we'll do that.
30

31
00:02:41,330 --> 00:02:45,210
So lets have a ID number in here.
31

32
00:02:46,780 --> 00:02:48,400
We need to get that Id very soon.
32

33
00:02:48,400 --> 00:02:53,670
So for now lets put one in here so that we do.
33

34
00:02:53,950 --> 00:02:57,190
And I actually would want to put the ID in here.
34

35
00:02:57,190 --> 00:03:01,120
Its getting me a compilation error, because I need to say this.id
35

36
00:03:01,570 --> 00:03:07,340
Now what do you want to do once I have the data and I get the data in? what I want to do?
36

37
00:03:08,620 --> 00:03:15,360
You have to do thing in here, so as the todo todo import the  todo in.
37

38
00:03:15,790 --> 00:03:27,270
And I would say this.todo = ... first I need to have the data on it, so say data. once I have the
38

39
00:03:27,270 --> 00:03:31,710
data structure, data =  you can see that it's complaining.
39

40
00:03:31,710 --> 00:03:38,700
The object is not a todo type. todo what I do is I'll go to the retrieve todo and well here in the get
40

41
00:03:39,080 --> 00:03:46,290
I would need to declare the fact that the data structure to which it can map it to, Now you would
41

42
00:03:46,290 --> 00:03:48,860
see that this would compile fine.
42

43
00:03:48,870 --> 00:03:55,200
So what we're doing is quickly creating the steps needed to be able to initialize the todo, and other
43

44
00:03:55,200 --> 00:03:55,700
things.
44

45
00:03:55,740 --> 00:04:00,420
One of the reasons we are missing right now, is we have not really got the id yet. where we want
45

46
00:04:00,420 --> 00:04:05,230
to get the id from? We would want to get it from the route parameters.
46

47
00:04:05,670 --> 00:04:09,480
If we look at the welcome component, we did this already earlier.
47

48
00:04:09,570 --> 00:04:15,090
How do we get it from our component? So you can see that we have added activate route as a parameter and
48

49
00:04:15,090 --> 00:04:16,890
got the value in this way.
49

50
00:04:17,160 --> 00:04:19,620
So let's look at doing something very similar right now.
50

51
00:04:19,660 --> 00:04:31,730
So private route : ActivatedRoute,  insert a comma here.. to make sure that compiler is happy and now, You
51

52
00:04:31,730 --> 00:04:35,970
have actual router imported from angular/route.
52

53
00:04:36,170 --> 00:04:37,170
That's good.
53

54
00:04:37,220 --> 00:04:38,780
And now I can use that router
54

55
00:04:38,900 --> 00:04:47,980
So the parameter name in here is  id. params is nothing but a map, and from the map I'm picking up something
55

56
00:04:47,980 --> 00:04:51,880
with the key as I.D. and that's what becomes this.id
56

57
00:04:51,880 --> 00:04:56,570
So we are setting the this.id in here, that we are calling directly to do so.
57

58
00:04:56,970 --> 00:05:01,720
And as soon as that is available, we are setting it to local todo.
58

59
00:05:01,800 --> 00:05:03,090
Is that too efficient?
59

60
00:05:03,090 --> 00:05:07,290
No we would need to map our view to this.
60

61
00:05:07,510 --> 00:05:08,830
How do we do that?
61

62
00:05:08,860 --> 00:05:13,040
So we have the description field, how do we map it to the view?
62

63
00:05:13,120 --> 00:05:20,460
Think about it> banana in a box. We used that in the login page.
63

64
00:05:20,950 --> 00:05:28,630
So I'll say todo.description
64

65
00:05:29,610 --> 00:05:36,120
ngModel. And this one would be something similar.
65

66
00:05:36,750 --> 00:05:37,120
Todo.
66

67
00:05:37,160 --> 00:05:40,350
target
67

68
00:05:40,440 --> 00:05:41,160
Isn't this cool?
68

69
00:05:41,300 --> 00:05:47,130
All the concepts that we have learned over the period of the last few hours, we are combining all of
69

70
00:05:47,130 --> 00:05:50,920
them., and using them to create this todo for them.
70

71
00:05:50,940 --> 00:05:53,620
Now let's see if everything is coming up fine.
71

72
00:05:53,650 --> 00:05:56,490
Now you can see that. Let's run this. is good.
72

73
00:05:56,490 --> 00:05:57,440
Now this is working fine.
73

74
00:05:57,440 --> 00:06:02,100
Learn to dance todo.  it working fine, but I'm not able to show the target date.
74

75
00:06:02,100 --> 00:06:07,750
And when I look at the log it says 2000 1 8 0 9, it does not conform to the required format.
75

76
00:06:07,780 --> 00:06:10,420
Y y y y m m d d .
76

77
00:06:10,460 --> 00:06:14,950
What do you think? is the format of the day is not really good? what does it do?
77

78
00:06:15,180 --> 00:06:19,890
The reason is because the service is returning the date in this specific format.
78

79
00:06:19,900 --> 00:06:20,580
In the next step,
79

80
00:06:20,670 --> 00:06:22,080
Let's look at how to fix this.
80

81
00:06:22,180 --> 00:06:27,230
But for now what we have in here is a pretty decent set of data.
81

82
00:06:27,270 --> 00:06:29,430
I can click update in here.
82

83
00:06:29,460 --> 00:06:31,920
Look at that specific update details there.
83

84
00:06:31,920 --> 00:06:37,800
So now I can go back to the todos page, click Update Learn about microservices,  and click Update again and learn
84

85
00:06:37,800 --> 00:06:38,680
about angular.
85

86
00:06:38,790 --> 00:06:40,340
That's pretty cool.
86

87
00:06:40,350 --> 00:06:44,790
One of the things which we have been doing over the last few steps, is kind of hard coding in28minutes
87

88
00:06:45,390 --> 00:06:47,710
when we get to the authentication section,
88

89
00:06:47,760 --> 00:06:53,540
We'll try and remove all the hard coding, and really make our application compatible with multiple users.
89

90
00:06:53,760 --> 00:06:56,570
For now stick with us, and I'll see you in the next step.
90

91
00:06:56,620 --> 00:06:57,520
Until then, bye bye!
