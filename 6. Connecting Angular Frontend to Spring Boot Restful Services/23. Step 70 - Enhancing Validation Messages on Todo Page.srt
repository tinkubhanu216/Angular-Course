0
1
00:00:02,510 --> 00:00:08,090
Welcome back. In the previous step, we looked at some of the basic validation features. In this step,
1

2
00:00:08,090 --> 00:00:11,740
Let's look at a little bit of more about validation.
2

3
00:00:11,770 --> 00:00:16,560
Now one more thing which we can improve on, is if I press enter here, or if I press the save, if I'm not
3

4
00:00:16,560 --> 00:00:21,360
showing any validation message to the user and that's not really good right?
4

5
00:00:21,380 --> 00:00:25,520
So let's start with actually having an indication of invalid fields.
5

6
00:00:25,550 --> 00:00:33,440
And slowly we would add the validation messages. Also what I i'll do is open up this is this file todo component
6

7
00:00:33,870 --> 00:00:34,840
.ts
7

8
00:00:35,180 --> 00:00:38,610
And what I would want to do is say .ng-invlaid.
8

9
00:00:38,700 --> 00:00:43,940
This is a class which is automatically added by Angular, on invalid fields.
9

10
00:00:44,030 --> 00:00:50,180
And what I would want to do on invalid fields, I would want to add border on the left hand side of the
10

11
00:00:50,180 --> 00:00:58,820
field... and the border let's make it 5px,  solid and let's give it a color # let's just say it's
11

12
00:00:59,160 --> 00:00:59,950
red.
12

13
00:01:00,020 --> 00:01:03,920
Save it and now refresh the page.
13

14
00:01:04,020 --> 00:01:06,130
It's just not yet refreshed
14

15
00:01:06,190 --> 00:01:12,080
It's refreshing now. Page is refreshed, and now you'd see that there is a red border on everything
15

16
00:01:12,200 --> 00:01:13,120
which is invalid.
16

17
00:01:13,130 --> 00:01:15,180
The description is empty, so it's invalid.
17

18
00:01:15,200 --> 00:01:16,840
There is no red border on the target date.
18

19
00:01:17,030 --> 00:01:24,590
But we have a form and the form is invalid, and because of it there is a red line for the entire form.
19

20
00:01:24,590 --> 00:01:27,810
So everything which is invalid is getting visible.
20

21
00:01:27,830 --> 00:01:34,220
And now if I just type in learn, you will see that the red bar disappears because this field is no longer
21

22
00:01:34,220 --> 00:01:35,010
invalid.
22

23
00:01:35,060 --> 00:01:40,330
And if this field is no longer invalid, then the entire form is also no longer invalid.
23

24
00:01:40,580 --> 00:01:45,510
Isn't it cool? Just by adding a little bit of code,   we are able to do a lot of stuff.
24

25
00:01:45,590 --> 00:01:51,190
Now the interesting thing is I don't really like the fact that when minimal length is 5,.
25

26
00:01:51,230 --> 00:01:55,640
So when I am with the fifth character, this field becomes invalid so the form becomes invalid.
26

27
00:01:55,760 --> 00:02:01,220
And I don't really need to show the whole thing in here. And CSS supports that, you just need to say
27

28
00:02:01,400 --> 00:02:05,350
I'm not doing this on the form element.
28

29
00:02:05,450 --> 00:02:10,830
So on the from element, do not apply this class. Cool!
29

30
00:02:10,980 --> 00:02:13,210
Now only the invalid elements have there.
30

31
00:02:13,210 --> 00:02:18,390
So if I go here and press delete on that, then and you would see that the target date field is also in
31

32
00:02:18,460 --> 00:02:21,030
getting highlighting that specific thing
32

33
00:02:21,050 --> 00:02:22,330
This is very cool right!
33

34
00:02:22,340 --> 00:02:26,960
So a clear indication to the user as to which fields are invalid.
34

35
00:02:26,960 --> 00:02:30,920
The other thing you can do is actually add validation messages on top of the form.
35

36
00:02:30,920 --> 00:02:40,360
What I do is I'll say div class=alert. alert warning.
36

37
00:02:40,890 --> 00:02:54,560
And if *ngIf=form todoForm.invalid, then I would say enter a valid user.
37

38
00:02:54,580 --> 00:03:00,320
Let's see what would happen now if the form has invalid values, and you're trying to add valid values
38

39
00:03:00,350 --> 00:03:04,730
in here right? Now let's say if I type in lear.
39

40
00:03:04,750 --> 00:03:07,280
Are we having an length of five?
40

41
00:03:07,280 --> 00:03:11,490
So as soon as I enter n, that you would see that that message disappeared.
41

42
00:03:11,780 --> 00:03:16,790
The other thing you can do is actually, like now what happens is to refresh the entire page.
42

43
00:03:16,850 --> 00:03:19,310
I'm trying to create a new todo.  By default,
43

44
00:03:19,310 --> 00:03:29,310
It shows up in values. What I can do is I can tell when you show that when a field is edited. So don't
44

45
00:03:29,330 --> 00:03:36,740
initially show it. but only show it when a field is edited. So todo form that will be there when at least
45

46
00:03:36,740 --> 00:03:39,620
one value on the form is being changed.
46

47
00:03:39,620 --> 00:03:43,060
So now you would see that by default it's not shown.
47

48
00:03:43,080 --> 00:03:44,500
I entered learn.
48

49
00:03:44,510 --> 00:03:51,690
So it is a valid value so it disappears. let's say learn about angular, and save it. Now,
49

50
00:03:51,790 --> 00:03:58,830
When you do that then I come over here, and let's start removing the things that it doesn't really matter.
50

51
00:03:59,210 --> 00:04:05,120
But when I change the value, it says enter valid values, and the invalid values are highlighted
51

52
00:04:05,120 --> 00:04:06,880
by red color.
52

53
00:04:06,880 --> 00:04:09,210
Now there are a few other things you can do.
53

54
00:04:09,260 --> 00:04:16,280
You can actually add template variable on each of these elements as well. So I can say this element has
54

55
00:04:16,280 --> 00:04:20,300
a template where it will show on the target date I can say #target date
55

56
00:04:23,810 --> 00:04:28,880
= ngModel. Then what we are saying is we are creating a reference to this.
56

57
00:04:29,330 --> 00:04:35,000
And what we can do now is I can use this reference in the validation as well. So I can say if todoForm
57

58
00:04:35,000 --> 00:04:35,570
dot
58

59
00:04:35,630 --> 00:04:42,950
And now I can take target date.invalid .  target date is invalid I can say enter a valid target date
59

60
00:04:43,400 --> 00:04:49,340
and I can do something similar on the description as well as I can that description.invalid and
60

61
00:04:49,360 --> 00:04:56,390
there at least 5 characters in this.
61

62
00:04:57,440 --> 00:04:58,700
So all these are possible.
62

63
00:04:58,730 --> 00:05:03,650
One of the things is for description, we did not really add template reference, so I would need to say #
63

64
00:05:04,280 --> 00:05:14,080
description = ngModel.  Let's press ENTER or here so that we can see the entire field.
64

65
00:05:14,280 --> 00:05:14,850
OK.
65

66
00:05:14,890 --> 00:05:17,710
So this is the description of that specific thing,  for you.
66

67
00:05:18,220 --> 00:05:22,320
What we have in here now is a detailed validation.
67

68
00:05:22,330 --> 00:05:25,960
You would have a lot of messages displayed when something is invalid.
68

69
00:05:26,230 --> 00:05:31,590
So you would see that when I do this, you can see the invalid values, that at least five characters in
69

70
00:05:31,600 --> 00:05:36,330
description. If I actually go here and delete them, you would see all these values.
70

71
00:05:36,510 --> 00:05:41,470
What we're showing in here is what are the wider range of possibilities that are possible with angular
71

72
00:05:41,810 --> 00:05:47,860
when you design you a form, you might not need this kind of explicit... so many validation. So you can decide
72

73
00:05:47,860 --> 00:05:50,550
how you would want to show the validation messages.
73

74
00:05:50,710 --> 00:05:56,050
The idea is just to show what are different possibilities. In this specific step,
74

75
00:05:56,050 --> 00:06:01,540
what we learned is how to validate the forms, and how we can make sure that when somebody tries to submit
75

76
00:06:01,540 --> 00:06:08,530
when somebody presses Enter, we try and submit the form so that when I enter a valid value and press
76

77
00:06:08,560 --> 00:06:11,170
enter the form gets submitted.
77

78
00:06:11,170 --> 00:06:15,670
The we don't really have a target date, so let's put a target date and present enter.
78

79
00:06:15,820 --> 00:06:19,530
Now I press and the form gets submitted and the change is good to see.
79

80
00:06:19,660 --> 00:06:24,960
The other thing which we have added is validation on all these fields inside the form.
80

81
00:06:25,030 --> 00:06:27,750
I'm sure this would have been an interesting exercise for you.
81

82
00:06:27,760 --> 00:06:29,330
I'll see you in the next step. Until then,
82

83
00:06:29,330 --> 00:06:29,890
Bye bye!
